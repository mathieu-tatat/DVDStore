{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let HomeComponent = class HomeComponent {\n  constructor(router, homeService, route) {\n    this.router = router;\n    this.homeService = homeService;\n    this.route = route;\n    this.dvds = [];\n    this.genre = '';\n    this.router.events.subscribe(val => {\n      if (val.url) {\n        var genre1 = val.url.split('=')[1];\n        this.genre = genre1;\n      }\n    });\n  }\n  ngOnChanges(changes) {}\n  ngAfterContentInit() {\n    this.homeService.getAll().subscribe(data => {\n      this.dvds = data;\n      this.dvds.map(dvds => ({\n        ...dvds,\n        pathPhoto: dvds.pathPhoto ? dvds.pathPhoto.replace(/\\\\/g, '/') : undefined\n      }));\n      if (this.genre) this.filterDvdsByGenre(this.genre);\n    });\n  }\n  ngAfterViewInit() {}\n  ngOnInit() {}\n  filterByGenre() {\n    this.route.params.subscribe(params => {\n      const genre = params['genre'];\n      if (this.router.url.endsWith(genre)) {\n        this.filterDvdsByGenre(genre);\n      } else {\n        \"aucun dvd ne correspond à ce genre\";\n      }\n    });\n  }\n  filterDvdsByGenre(genre) {\n    console.log(genre);\n    console.log(this.dvds);\n    this.dvds = this.dvds.filter(value => value.genre === genre);\n  }\n};\nHomeComponent = __decorate([Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})], HomeComponent);\n/* a mettre dans une fonction qui capte les changements dans l'url\n  this.dvds = this.dvds.filter((value) => {\n    return value.genre === genre\n  })\n  */\n/*\n  ngOnInit() {\n    this.homeService.getAll().subscribe(data=> {\n      this.dvd = data;\n\n      this.dvd.map((dvds: any) => ({\n        ...dvds,\n        pathPhoto: dvds.pathPhoto ? dvds.pathPhoto.replace(/\\\\/g, '/') : undefined\n      \n      }))\n      ;\n  \n  }\n  )\n  }\n*/","map":{"version":3,"names":["Component","HomeComponent","constructor","router","homeService","route","dvds","genre","events","subscribe","val","url","genre1","split","ngOnChanges","changes","ngAfterContentInit","getAll","data","map","pathPhoto","replace","undefined","filterDvdsByGenre","ngAfterViewInit","ngOnInit","filterByGenre","params","endsWith","console","log","filter","value","__decorate","selector","templateUrl","styleUrls"],"sources":["/Users/mathieutatat/IdeaProjects/DVDStore/front/src/app/home/home.component.ts"],"sourcesContent":["import { AfterContentInit, AfterViewInit, Component,OnChanges,OnInit, SimpleChanges } from '@angular/core';\nimport { HomeService } from '../services/home.service';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nexport interface Dvd{  \n  name : string,\n  genre : string,\n  quantity : number,\n  prix: number; \n  photo: string;\n  description: string;\n  id? : number,\n}\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\n\nexport class HomeComponent implements OnInit, OnChanges{\n\n  dvds: any[] = []\n  genre: string='';\n\n\n  constructor(private router: Router, private homeService: HomeService, private route:ActivatedRoute,) {\n    this.router.events.subscribe( (val: any) => {\n      if(val.url){\n      var genre1 = val.url.split('=')[1];\n      this.genre=genre1;\n      }});\n      \n    \n  }\n  ngOnChanges(changes: SimpleChanges): void {\n    \n    }\n\n  ngAfterContentInit(): void {\n    this.homeService.getAll().subscribe(data=> {\n      this.dvds = data;\n  \n      this.dvds.map((dvds: any) => ({\n        ...dvds,\n        pathPhoto: dvds.pathPhoto ? dvds.pathPhoto.replace(/\\\\/g, '/') : undefined\n      }));\n      if(this.genre)\n      this.filterDvdsByGenre(this.genre);   \n    })\n  }\n  ngAfterViewInit(): void {\n\n  }\n  \n\nngOnInit(){\n    \n    \n}\n\n\nfilterByGenre() {\n  \n  this.route.params.subscribe(params => {\n    const genre = params['genre'];\n    if (this.router.url.endsWith(genre)){\n      this.filterDvdsByGenre(genre);\n      \n    } else {\n        \"aucun dvd ne correspond à ce genre\"\n    }\n  });\n}\n\nfilterDvdsByGenre(genre: string) {\n  console.log(genre);\n  console.log(this.dvds);\nthis.dvds = this.dvds.filter(value => value.genre === genre);\n}\n    \n}\n\n/* a mettre dans une fonction qui capte les changements dans l'url\n  this.dvds = this.dvds.filter((value) => {\n    return value.genre === genre\n  })\n  */\n\n/*\n  ngOnInit() {\n    this.homeService.getAll().subscribe(data=> {\n      this.dvd = data;\n\n      this.dvd.map((dvds: any) => ({\n        ...dvds,\n        pathPhoto: dvds.pathPhoto ? dvds.pathPhoto.replace(/\\\\/g, '/') : undefined\n      \n      }))\n      ;\n  \n  }\n  )\n  }\n*/"],"mappings":";AAAA,SAA0CA,SAAS,QAAwC,eAAe;AAoBnG,WAAMC,aAAa,GAAnB,MAAMA,aAAa;EAMxBC,YAAoBC,MAAc,EAAUC,WAAwB,EAAUC,KAAoB;IAA9E,KAAAF,MAAM,GAANA,MAAM;IAAkB,KAAAC,WAAW,GAAXA,WAAW;IAAuB,KAAAC,KAAK,GAALA,KAAK;IAJnF,KAAAC,IAAI,GAAU,EAAE;IAChB,KAAAC,KAAK,GAAS,EAAE;IAId,IAAI,CAACJ,MAAM,CAACK,MAAM,CAACC,SAAS,CAAGC,GAAQ,IAAI;MACzC,IAAGA,GAAG,CAACC,GAAG,EAAC;QACX,IAAIC,MAAM,GAAGF,GAAG,CAACC,GAAG,CAACE,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QAClC,IAAI,CAACN,KAAK,GAACK,MAAM;;IAChB,CAAC,CAAC;EAGP;EACAE,WAAWA,CAACC,OAAsB,GAEhC;EAEFC,kBAAkBA,CAAA;IAChB,IAAI,CAACZ,WAAW,CAACa,MAAM,EAAE,CAACR,SAAS,CAACS,IAAI,IAAE;MACxC,IAAI,CAACZ,IAAI,GAAGY,IAAI;MAEhB,IAAI,CAACZ,IAAI,CAACa,GAAG,CAAEb,IAAS,KAAM;QAC5B,GAAGA,IAAI;QACPc,SAAS,EAAEd,IAAI,CAACc,SAAS,GAAGd,IAAI,CAACc,SAAS,CAACC,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,GAAGC;OAClE,CAAC,CAAC;MACH,IAAG,IAAI,CAACf,KAAK,EACb,IAAI,CAACgB,iBAAiB,CAAC,IAAI,CAAChB,KAAK,CAAC;IACpC,CAAC,CAAC;EACJ;EACAiB,eAAeA,CAAA,GAEf;EAGFC,QAAQA,CAAA,GAGR;EAGAC,aAAaA,CAAA;IAEX,IAAI,CAACrB,KAAK,CAACsB,MAAM,CAAClB,SAAS,CAACkB,MAAM,IAAG;MACnC,MAAMpB,KAAK,GAAGoB,MAAM,CAAC,OAAO,CAAC;MAC7B,IAAI,IAAI,CAACxB,MAAM,CAACQ,GAAG,CAACiB,QAAQ,CAACrB,KAAK,CAAC,EAAC;QAClC,IAAI,CAACgB,iBAAiB,CAAChB,KAAK,CAAC;OAE9B,MAAM;QACH,oCAAoC;;IAE1C,CAAC,CAAC;EACJ;EAEAgB,iBAAiBA,CAAChB,KAAa;IAC7BsB,OAAO,CAACC,GAAG,CAACvB,KAAK,CAAC;IAClBsB,OAAO,CAACC,GAAG,CAAC,IAAI,CAACxB,IAAI,CAAC;IACxB,IAAI,CAACA,IAAI,GAAG,IAAI,CAACA,IAAI,CAACyB,MAAM,CAACC,KAAK,IAAIA,KAAK,CAACzB,KAAK,KAAKA,KAAK,CAAC;EAC5D;CAEC;AA7DYN,aAAa,GAAAgC,UAAA,EANzBjC,SAAS,CAAC;EACTkC,QAAQ,EAAE,UAAU;EACpBC,WAAW,EAAE,uBAAuB;EACpCC,SAAS,EAAE,CAAC,sBAAsB;CACnC,CAAC,C,EAEWnC,aAAa,CA6DzB;AAED;;;;;AAMA"},"metadata":{},"sourceType":"module","externalDependencies":[]}