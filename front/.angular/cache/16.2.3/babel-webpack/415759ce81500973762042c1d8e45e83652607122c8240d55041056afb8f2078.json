{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AuthService {\n  constructor(http) {\n    this.http = http;\n  }\n  send(authRequest) {\n    return this.http.post(`http://localhost:80/authorize`, authRequest);\n  }\n}\n_class = AuthService;\n_class.ɵfac = function AuthService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["AuthService","constructor","http","send","authRequest","post","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["/Users/mathieutatat/IdeaProjects/DVDStore/front/src/app/services/auth.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nexport interface AuthRequestDto{\n  username: string;\n  password: string;\n\n}\n\nexport interface RecupTokenRoleDto{\n  token: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  constructor(private http: HttpClient) { }\n\n  send(authRequest: AuthRequestDto): Observable<RecupTokenRoleDto>{\n   \n    return this.http.post(`http://localhost:80/authorize`, authRequest ) as Observable<RecupTokenRoleDto>;    \n  }\n\n}\n\n"],"mappings":";;;AAiBA,OAAM,MAAOA,WAAW;EAEtBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAgB;EAExCC,IAAIA,CAACC,WAA2B;IAE9B,OAAO,IAAI,CAACF,IAAI,CAACG,IAAI,CAAC,+BAA+B,EAAED,WAAW,CAAmC;EACvG;;SAPWJ,WAAW;;mBAAXA,MAAW,EAAAM,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;;SAAXT,MAAW;EAAAU,OAAA,EAAXV,MAAW,CAAAW,IAAA;EAAAC,UAAA,EAFV;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}