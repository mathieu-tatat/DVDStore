{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./auth.service\";\nimport * as i2 from \"@angular/router\";\nexport class AuthGuardService {\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n  }\n  canActivate(next, state) {\n    if (this.authService.isAuthenticated()) {\n      return true; // L'utilisateur est authentifié, permet d'accéder à la route\n    } else {\n      this.router.navigate(['/login']); // Redirige vers la page de connexion si l'utilisateur n'est pas authentifié\n      return false; // Empêche l'accès à la route\n    }\n  }\n}\n_class = AuthGuardService;\n_class.ɵfac = function AuthGuardService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.AuthService), i0.ɵɵinject(i2.Router));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["AuthGuardService","constructor","authService","router","canActivate","next","state","isAuthenticated","navigate","i0","ɵɵinject","i1","AuthService","i2","Router","factory","ɵfac","providedIn"],"sources":["/Users/mathieutatat/IdeaProjects/DVDStore/front/src/app/services/auth-guard.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { AuthService } from './auth.service';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuardService implements CanActivate{\n\n\n\n  constructor(private authService: AuthService, private router: Router) {}\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): boolean {\n    if (this.authService.isAuthenticated()) {\n      return true; // L'utilisateur est authentifié, permet d'accéder à la route\n    } else {\n      this.router.navigate(['/login']); // Redirige vers la page de connexion si l'utilisateur n'est pas authentifié\n      return false; // Empêche l'accès à la route\n    }\n  }\n}\n"],"mappings":";;;;AAOA,OAAM,MAAOA,gBAAgB;EAI3BC,YAAoBC,WAAwB,EAAUC,MAAc;IAAhD,KAAAD,WAAW,GAAXA,WAAW;IAAuB,KAAAC,MAAM,GAANA,MAAM;EAAW;EAEvEC,WAAWA,CACTC,IAA4B,EAC5BC,KAA0B;IAE1B,IAAI,IAAI,CAACJ,WAAW,CAACK,eAAe,EAAE,EAAE;MACtC,OAAO,IAAI,CAAC,CAAC;KACd,MAAM;MACL,IAAI,CAACJ,MAAM,CAACK,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;MAClC,OAAO,KAAK,CAAC,CAAC;;EAElB;;SAhBWR,gBAAgB;;mBAAhBA,MAAgB,EAAAS,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,MAAA;AAAA;;SAAhBd,MAAgB;EAAAe,OAAA,EAAhBf,MAAgB,CAAAgB,IAAA;EAAAC,UAAA,EAFf;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}