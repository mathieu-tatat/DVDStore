{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class HomeService {\n  constructor(http) {\n    this.http = http;\n  }\n  getAll() {\n    return this.http.get(\"http://localhost:80/dvds\");\n  }\n}\n_class = HomeService;\n_class.ɵfac = function HomeService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["HomeService","constructor","http","getAll","get","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["/Users/mathieutatat/IdeaProjects/DVDStore/front/src/app/services/home.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nexport interface Dvd{\n  name : string,\n  genre : string,\n  quantity : number,\n  prix: number;\n  id? : number,\n}\n@Injectable({\n  providedIn: 'root'\n})\nexport class HomeService {\n\n  constructor(private http: HttpClient) { }\n\n\n\n  \n  getAll(): Observable<Array<Dvd>> {\n  return this.http.get(\"http://localhost:80/dvds\") as Observable<Array<Dvd>>;\n\n  }\n\n}\n"],"mappings":";;;AAcA,OAAM,MAAOA,WAAW;EAEtBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAgB;EAKxCC,MAAMA,CAAA;IACN,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAC,0BAA0B,CAA2B;EAE1E;;SAVWJ,WAAW;;mBAAXA,MAAW,EAAAK,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;;SAAXR,MAAW;EAAAS,OAAA,EAAXT,MAAW,CAAAU,IAAA;EAAAC,UAAA,EAFV;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}