{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let NewdvdComponent = class NewdvdComponent {\n  constructor(router, newDvdService, route) {\n    this.router = router;\n    this.newDvdService = newDvdService;\n    this.route = route;\n    this.dvd = [];\n    this.detail = 0;\n    this.router.events.subscribe(val => {\n      if (val.url) {\n        var id = val.url.split('=')[1];\n        this.detail = id;\n      }\n    });\n  }\n  ngOnInit() {\n    this.newDvdService.getDvdById(this.detail).subscribe(data => {\n      data.pathPhoto = data.pathPhoto ? data.pathPhoto.replace(/\\\\/g, '/') : undefined;\n      this.dvd = data;\n    });\n  }\n  filterById() {\n    this.route.params.subscribe(params => {\n      const id = params['id'];\n      if (this.router.url.endsWith(id)) {\n        this.filterDvdsById(id);\n      } else {\n        \"aucun dvd ne correspond à cet id\";\n      }\n    });\n  }\n  filterDvdsById(id) {\n    this.dvd = this.dvd.filter(dvd => dvd.id === id);\n  }\n  updateById(id) {\n    this.router.navigate(['/dvds', id]);\n    console.log(this.dvd);\n  }\n  deleteDvd(id) {\n    this.newDvdService.delete(id).subscribe(data => {\n      console.log(data);\n      this.ngOnInit();\n    });\n  }\n};\nNewdvdComponent = __decorate([Component({\n  selector: 'app-newdvd',\n  templateUrl: './newdvd.component.html',\n  styleUrls: ['./newdvd.component.css']\n})], NewdvdComponent);","map":{"version":3,"names":["Component","NewdvdComponent","constructor","router","newDvdService","route","dvd","detail","events","subscribe","val","url","id","split","ngOnInit","getDvdById","data","pathPhoto","replace","undefined","filterById","params","endsWith","filterDvdsById","filter","updateById","navigate","console","log","deleteDvd","delete","__decorate","selector","templateUrl","styleUrls"],"sources":["/Users/mathieutatat/IdeaProjects/DVDStore/front/src/app/newdvd/newdvd.component.ts"],"sourcesContent":["import { Component, OnInit, OnChanges } from '@angular/core';\nimport { NewdvdService } from '../services/newdvd.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { filter } from 'rxjs';\n\nexport interface Dvd{  \n  name : string,\n  genre : string,\n  quantity : number,\n  prix: number; \n  photo: string;\n  description: string;\n  pathPhoto: string;\n  id? : number,\n}\n\n@Component({\n  selector: 'app-newdvd',\n  templateUrl: './newdvd.component.html',\n  styleUrls: ['./newdvd.component.css']\n})\n\nexport class NewdvdComponent implements OnInit {\n  \n  dvd: any = [];\n  detail: number=0;\n  \n  constructor(private router: Router, private newDvdService: NewdvdService,private route:ActivatedRoute) { \n  \n    this.router.events.subscribe( (val: any) => {\n      if(val.url){\n      var id = val.url.split('=')[1];\n      this.detail=id;\n      }});\n  }\n\n  ngOnInit(){\n    this.newDvdService.getDvdById(this.detail).subscribe(data=> {\n      data.pathPhoto= data.pathPhoto ? data.pathPhoto.replace(/\\\\/g, '/') as string : undefined\n      this.dvd = data;\n    })\n  }\n\n  filterById(){\n  this.route.params.subscribe(params => {\n    const id = params['id'];\n    if(this.router.url.endsWith(id)){\n      this.filterDvdsById(id);\n    } else {\n      \"aucun dvd ne correspond à cet id\"\n  }\n  });}\n\n  filterDvdsById(id: number) {\n    this.dvd = this.dvd.filter((dvd: Dvd) => dvd.id === id);\n  }\n  \nupdateById(id: number){\n  this.router.navigate(['/dvds',id]);\n  console.log(this.dvd);\n}\n\n\ndeleteDvd(id: number) {\n  this.newDvdService.delete(id)\n  .subscribe(data => {\n    console.log(data);\n    this.ngOnInit();\n  });\n}\n\n\n\n}\n\n"],"mappings":";AAAA,SAASA,SAAS,QAA2B,eAAe;AAsBrD,WAAMC,eAAe,GAArB,MAAMA,eAAe;EAK1BC,YAAoBC,MAAc,EAAUC,aAA4B,EAASC,KAAoB;IAAjF,KAAAF,MAAM,GAANA,MAAM;IAAkB,KAAAC,aAAa,GAAbA,aAAa;IAAwB,KAAAC,KAAK,GAALA,KAAK;IAHtF,KAAAC,GAAG,GAAQ,EAAE;IACb,KAAAC,MAAM,GAAS,CAAC;IAId,IAAI,CAACJ,MAAM,CAACK,MAAM,CAACC,SAAS,CAAGC,GAAQ,IAAI;MACzC,IAAGA,GAAG,CAACC,GAAG,EAAC;QACX,IAAIC,EAAE,GAAGF,GAAG,CAACC,GAAG,CAACE,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QAC9B,IAAI,CAACN,MAAM,GAACK,EAAE;;IACb,CAAC,CAAC;EACP;EAEAE,QAAQA,CAAA;IACN,IAAI,CAACV,aAAa,CAACW,UAAU,CAAC,IAAI,CAACR,MAAM,CAAC,CAACE,SAAS,CAACO,IAAI,IAAE;MACzDA,IAAI,CAACC,SAAS,GAAED,IAAI,CAACC,SAAS,GAAGD,IAAI,CAACC,SAAS,CAACC,OAAO,CAAC,KAAK,EAAE,GAAG,CAAW,GAAGC,SAAS;MACzF,IAAI,CAACb,GAAG,GAAGU,IAAI;IACjB,CAAC,CAAC;EACJ;EAEAI,UAAUA,CAAA;IACV,IAAI,CAACf,KAAK,CAACgB,MAAM,CAACZ,SAAS,CAACY,MAAM,IAAG;MACnC,MAAMT,EAAE,GAAGS,MAAM,CAAC,IAAI,CAAC;MACvB,IAAG,IAAI,CAAClB,MAAM,CAACQ,GAAG,CAACW,QAAQ,CAACV,EAAE,CAAC,EAAC;QAC9B,IAAI,CAACW,cAAc,CAACX,EAAE,CAAC;OACxB,MAAM;QACL,kCAAkC;;IAEtC,CAAC,CAAC;EAAC;EAEHW,cAAcA,CAACX,EAAU;IACvB,IAAI,CAACN,GAAG,GAAG,IAAI,CAACA,GAAG,CAACkB,MAAM,CAAElB,GAAQ,IAAKA,GAAG,CAACM,EAAE,KAAKA,EAAE,CAAC;EACzD;EAEFa,UAAUA,CAACb,EAAU;IACnB,IAAI,CAACT,MAAM,CAACuB,QAAQ,CAAC,CAAC,OAAO,EAACd,EAAE,CAAC,CAAC;IAClCe,OAAO,CAACC,GAAG,CAAC,IAAI,CAACtB,GAAG,CAAC;EACvB;EAGAuB,SAASA,CAACjB,EAAU;IAClB,IAAI,CAACR,aAAa,CAAC0B,MAAM,CAAClB,EAAE,CAAC,CAC5BH,SAAS,CAACO,IAAI,IAAG;MAChBW,OAAO,CAACC,GAAG,CAACZ,IAAI,CAAC;MACjB,IAAI,CAACF,QAAQ,EAAE;IACjB,CAAC,CAAC;EACJ;CAIC;AAnDYb,eAAe,GAAA8B,UAAA,EAN3B/B,SAAS,CAAC;EACTgC,QAAQ,EAAE,YAAY;EACtBC,WAAW,EAAE,yBAAyB;EACtCC,SAAS,EAAE,CAAC,wBAAwB;CACrC,CAAC,C,EAEWjC,eAAe,CAmD3B"},"metadata":{},"sourceType":"module","externalDependencies":[]}