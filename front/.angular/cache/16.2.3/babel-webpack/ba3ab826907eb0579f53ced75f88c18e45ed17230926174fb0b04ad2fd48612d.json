{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./auth.service\";\nexport class NavService {\n  constructor(http, authService) {\n    this.http = http;\n    this.authService = authService;\n  }\n  logout() {\n    sessionStorage.removeItem('token');\n  }\n}\n_class = NavService;\n_class.ɵfac = function NavService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.AuthService));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["NavService","constructor","http","authService","logout","sessionStorage","removeItem","i0","ɵɵinject","i1","HttpClient","i2","AuthService","factory","ɵfac","providedIn"],"sources":["/Users/mathieutatat/IdeaProjects/DVDStore/front/src/app/services/nav.service.ts"],"sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NavService {\n\n\n  constructor(private http: HttpClient, private authService: AuthService) { }\n  \n  logout() {\n    sessionStorage.removeItem('token');\n  }\n}\n"],"mappings":";;;;AAOA,OAAM,MAAOA,UAAU;EAGrBC,YAAoBC,IAAgB,EAAUC,WAAwB;IAAlD,KAAAD,IAAI,GAAJA,IAAI;IAAsB,KAAAC,WAAW,GAAXA,WAAW;EAAiB;EAE1EC,MAAMA,CAAA;IACJC,cAAc,CAACC,UAAU,CAAC,OAAO,CAAC;EACpC;;SAPWN,UAAU;;mBAAVA,MAAU,EAAAO,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,WAAA;AAAA;;SAAVZ,MAAU;EAAAa,OAAA,EAAVb,MAAU,CAAAc,IAAA;EAAAC,UAAA,EAFT;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}