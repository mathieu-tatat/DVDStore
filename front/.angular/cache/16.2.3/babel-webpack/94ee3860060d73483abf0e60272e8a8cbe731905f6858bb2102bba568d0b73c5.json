{"ast":null,"code":"var _class;\nimport { BehaviorSubject, map } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AuthService {\n  constructor(http) {\n    this.http = http;\n    this.loggedIn = new BehaviorSubject(false);\n    this.loggedIn.next(this.getToken() !== null);\n  }\n  send(authRequest) {\n    return this.http.post(`http://localhost:80/authorize`, authRequest).pipe(map(response => {\n      return response;\n      console.log(response);\n    }));\n  }\n  logout() {\n    sessionStorage.removeItem('token');\n    this.loggedIn.next(false);\n  }\n  getToken() {\n    return sessionStorage.getItem('token');\n  }\n  isAuthenticated() {\n    return this.loggedIn.asObservable();\n  }\n}\n_class = AuthService;\n_class.ɵfac = function AuthService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["BehaviorSubject","map","AuthService","constructor","http","loggedIn","next","getToken","send","authRequest","post","pipe","response","console","log","logout","sessionStorage","removeItem","getItem","isAuthenticated","asObservable","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["/Users/mathieutatat/IdeaProjects/DVDStore/front/src/app/services/auth.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, map } from 'rxjs';\n\nexport interface AuthRequestDto{\n  username: string;\n  password: string;\n  role: string;\n\n}\n\nexport interface RecupTokenRoleDto{\n  token: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  response: {token: string} | undefined;\n  private loggedIn = new BehaviorSubject<boolean>(false);\n\n  constructor(private http: HttpClient) { \n    this.loggedIn.next(this.getToken() !== null);\n  }\n\n  send(authRequest: AuthRequestDto): Observable<RecupTokenRoleDto> {\n    return this.http.post(`http://localhost:80/authorize`, authRequest).pipe(\n      map((response: any) => {\n        return response as RecupTokenRoleDto;\n        console.log(response);\n\n      })\n    );\n  }\n\n  logout() {\n    sessionStorage.removeItem('token');\n    this.loggedIn.next(false);\n  }\n\n  getToken(): string | null {\n    return sessionStorage.getItem('token');\n  }\n\n  isAuthenticated(): Observable<boolean> {\n    return this.loggedIn.asObservable();\n  }\n}\n\n"],"mappings":";AAEA,SAASA,eAAe,EAAcC,GAAG,QAAQ,MAAM;;;AAgBvD,OAAM,MAAOC,WAAW;EAItBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,QAAQ,GAAG,IAAIL,eAAe,CAAU,KAAK,CAAC;IAGpD,IAAI,CAACK,QAAQ,CAACC,IAAI,CAAC,IAAI,CAACC,QAAQ,EAAE,KAAK,IAAI,CAAC;EAC9C;EAEAC,IAAIA,CAACC,WAA2B;IAC9B,OAAO,IAAI,CAACL,IAAI,CAACM,IAAI,CAAC,+BAA+B,EAAED,WAAW,CAAC,CAACE,IAAI,CACtEV,GAAG,CAAEW,QAAa,IAAI;MACpB,OAAOA,QAA6B;MACpCC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;IAEvB,CAAC,CAAC,CACH;EACH;EAEAG,MAAMA,CAAA;IACJC,cAAc,CAACC,UAAU,CAAC,OAAO,CAAC;IAClC,IAAI,CAACZ,QAAQ,CAACC,IAAI,CAAC,KAAK,CAAC;EAC3B;EAEAC,QAAQA,CAAA;IACN,OAAOS,cAAc,CAACE,OAAO,CAAC,OAAO,CAAC;EACxC;EAEAC,eAAeA,CAAA;IACb,OAAO,IAAI,CAACd,QAAQ,CAACe,YAAY,EAAE;EACrC;;SA7BWlB,WAAW;;mBAAXA,MAAW,EAAAmB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;;SAAXtB,MAAW;EAAAuB,OAAA,EAAXvB,MAAW,CAAAwB,IAAA;EAAAC,UAAA,EAFV;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}